# # HTTP 服务器配置
# server {
#     listen 80; # 监听 HTTP 默认端口
#     server_name card-embosser.xyqlx; # 域名
#     return 301 https://$server_name$request_uri; # 重定向到 HTTPS
# }

# HTTPS 服务器配置
server {
    allow 192.168.0.0/16;
    allow 192.168.137.0/24;
    allow 127.0.0.1;
    deny all;

    listen 443 ssl; # 监听 HTTPS 默认端口，启用 SSL
    server_name card-embosser.xyqlx;

    # SSL 证书和密钥文件路径
    ssl_certificate /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;

    # 其他 SSL 配置选项...
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:...';
    ssl_prefer_server_ciphers on;

    # rewrite ^ https://$host$request_uri? permanent;

    # 配置前端静态文件的根目录
    root /usr/share/nginx/html;
    index index.html;

    # 转发请求到后端容器，会去掉 /api 前缀
    location /api/ {
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 转发请求到前端容器
    location / {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # support WebSocket (for vite hmr)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}